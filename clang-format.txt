# 基础规范定义
BasedOnStyle: LLVM # 使用LLVM规范作为基础格式

# 决定控制结构（如函数、循环、if条件等）的大括号前是否换行
BreakBeforeBraces: Attach # 左花括号不换行

# 缩进风格定义
IndentWidth: 4 # 每行缩进宽度为4
TabWidth: 4 # Tab宽度为4
UseTab: Always # 保证使用Table
IndentCaseLabels: true # 带标签的case语句缩进
ContinuationIndentWidth: 4 # 条件语句过长时，换行新行缩进为4

# 空格相关设置
SpaceBeforeParens: ControlStatements # 仅在控制语句（如 if、for、while 等）的左括号前添加空格
SpacesInParentheses: false #控制在圆括号内两侧是否插入空格
SpacesInSquareBrackets: false # 设置方括号（数组或容器索引操作符）内部两侧是否插入空格
SpaceBeforeAssignmentOperators: true # 控制赋值运算符（如 =、+=、-= 等）前是否添加空格
SpaceAfterControlStatementKeyword: true # 控制在控制语句（如 if、for、while 等）的右括号后是否添加空格
SpaceInsideEmptyParentheses: false # 确定空括号对内部是否插入空格
SpacesInAngles: false # 确定圆括号（如函数调用或指针解引用）内部两侧是否插入空格
SpaceBeforeCtorInitializerColon: true # 类构造函数初始化列表冒号前是否添加空格
SpaceAfterCtorInitializerColon: true #类构造函数初始化列表冒号后是否添加空格

# 常用配置
AlignConsecutiveAssignments: false # 当多行连续赋值时，使等号对齐
ColumnLimit: 120 # 每行字符数限制为120
SortIncludes: true # 保证Include文件排序
PointerAlignment: Left # 指针或引用的星号（*）或尖括号（&）相对于变量名称的位置
AccessModifierOffset: -4 # 控制访问限定符（如 public、private、protected）与变量或函数名称之间的空格数
NamespaceIndentation: All # 控制命名空间中包含的定义是否缩进
